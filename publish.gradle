import java.text.SimpleDateFormat

apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

group 'tech.jorgecastro.retrofit-jsonapi-converter'
version '1.0.0-beta3'

publishing {
    publications {
        release(MavenPublication) {
            artifact("$buildDir/outputs/aar/retrofit-jsonapi-converter-release.aar")  {
                builtBy tasks.getByName("assemble")
            }
            groupId 'tech.jorgecastro'
            artifactId 'retrofit-jsonapi-converter'
            version this.version

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included in the pom.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

def properties = new Properties()
properties.load(new FileInputStream("local.properties"))


def getReleaseDate() {
    def dateFormat = new SimpleDateFormat("MMM dd, yyyy", new Locale("us", "US"))
    // GregorianCalendar(2020, 9, 20).getTime()
    def releaseDate = new Date()
    return dateFormat.format(releaseDate)
}

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    publications = ['release']
    configurations = ['archives']
    override = true
    pkg {
        repo = 'RetrofitJsonApiConverter'
        name = 'tech.jorgecastro.retrofit-jsonapi-converter'
        description = "Library to convert responses from a jsonapi-formatted web service to class objects"
        publicDownloadNumbers = true
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/devjorgecastro/retrofit-jsonapi-converter'
        version {
            name = this.version
            desc = "Version ${this.version}"
            released = new Date()
            vcsTag = this.version
            attributes = [
                    'Release Date': getReleaseDate(),
                    'Author': "Jorge Castro",
                    'Twitter': "@devjcastro",
                    'Github': "devjorgecastro"
            ]
        }
    }
}